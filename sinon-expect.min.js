!function(a){var b="object"==typeof module&&"function"==typeof require,c=function(a){return a.displayName||"spy"},d=function(a,b){var d=function(b){return function(){return a.assert[b].apply(a.assert,[this.obj].concat(Array.prototype.slice.call(arguments,0))),this}};if(a.assert.failException="Error",Object.keys)Object.keys(a.assert).forEach(function(a){return b.Assertion.prototype[a]?void 0:b.Assertion.prototype[a]=d(a)});else for(var e in a.assert)a.assert.hasOwnProperty(e)&&!b.Assertion.prototype[e]&&(b.Assertion.prototype[e]=d(e));return b.Assertion.prototype.argument=function(c){return a.assert.called(this.obj),b(this.obj.args[0][c])},b.Assertion.prototype.firstArgument=function(){return b(this.obj).argument(0)},b.Assertion.prototype.secondArgument=function(){return b(this.obj).argument(1)},b.Assertion.prototype.calledBefore=function(a,b){return this.assert(this.obj.calledBefore(a),b||function(){return"expected "+c(this.obj)+" to be called before "+c(a)},b||function(){return"expected "+c(this.obj)+" not called before "+c(a)}),this},b.Assertion.prototype.calledAfter=function(a,b){return this.assert(this.obj.calledAfter(a),b||function(){return"expected "+c(this.obj)+" to be called after "+c(a)},b||function(){return"expected "+c(this.obj)+" not called after "+c(a)}),this},b.sinon=a,b};if(b){module.exports.expect=d(require("sinon"),require("expect.js")),module.exports.use=d;var e=require("path"),f=function(a){return{pattern:a,included:!0,served:!0,watched:!1}},g=function(a){a.unshift(f(e.join(__dirname,"sinon-expect.js"))),a.unshift(f(e.resolve(require.resolve("expect.js")))),a.unshift(f(e.resolve(require.resolve("sinon"),"../../pkg/sinon.js")))};return g.$inject=["config.files"],void(module.exports["framework:sinon-expect"]=["factory",g])}d(a.sinon,a.expect)}(this);