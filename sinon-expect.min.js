!function(a){var b="object"==typeof module&&"function"==typeof require,c=function(a,b){var c=function(b){return function(){return a.assert[b].apply(a.assert,[this.obj].concat(Array.prototype.slice.call(arguments,0))),this}};if(Object.keys)Object.keys(a.assert).forEach(function(a){return b.Assertion.prototype[a]?void 0:b.Assertion.prototype[a]=c(a)});else for(var d in a.assert)a.assert.hasOwnProperty(d)&&!b.Assertion.prototype[d]&&(b.Assertion.prototype[d]=c(d));return b.Assertion.prototype.argument=function(c){return a.assert.called(this.obj),b(this.obj.args[0][c])},b.Assertion.prototype.firstArgument=function(){return b(this.obj).argument(0)},b.Assertion.prototype.secondArgument=function(){return b(this.obj).argument(1)},b.sinon=a,b};if(b){module.exports.expect=c(require("sinon"),require("expect.js")),module.exports.use=c;var d=require("path"),e=function(a){return{pattern:a,included:!0,served:!0,watched:!1}},f=function(a){a.unshift(e(d.join(__dirname,"sinon-expect.js"))),a.unshift(e(d.resolve(require.resolve("expect.js")))),a.unshift(e(d.resolve(require.resolve("sinon"),"../../pkg/sinon.js")))};return f.$inject=["config.files"],void(module.exports["framework:sinon-expect"]=["factory",f])}c(a.sinon,a.expect)}(this);